#!/bin/bash
#
# Bash script to create an encrypted tar archive of a given directory.
# Supports files and folders exclusions listed in the excluded.txt file
#
# SYNOPSIS
# - ./decrypt-backup /path/from/files/ /path/to/destination/ /path/to/passwordfile
#
# AUTHOR: 
# decrypt-backup is written by Joseph Persie and is licensed under the MIT License.

#############################################################
# Icons	and color
# https://www.techpaste.com/2012/11/print-colored-text-background-shell-script-linux/
# https://apps.timwhitlock.info/emoji/tables/unicode
#############################################################
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NOCOLOR='\033[0m'
ICON_OK='\xE2\x9C\x94'
ICON_KO='\xe2\x9c\x97'
ICON_WAIT='\xE2\x8C\x9B'
ICON_ROCKET='\xF0\x9F\x9A\x80'


# user input args
BACKUP_FILE=$(readlink -f $1)
DECRYPT_DESTINATION=$(readlink -f $2)
PASSWORD_FILE=$(readlink -f $3)
# convert source path to string. Es.: /path/to/Source Dir to path-to-Source-Dir
# check required arguments
if [ ! -f "$BACKUP_FILE" ]; then
  printf "[${RED}${ICON_KO}${NOCOLOR}] Sorry, but ${GREEN}Backup file${NOCOLOR} doesn't exist.\n"
  exit 1
fi
if [ ! -d "$DECRYPT_DESTINATION" ]; then
  printf "[${RED}${ICON_KO}${NOCOLOR}] Sorry, but ${GREEN}descypting destination directory${NOCOLOR} doesn't exist.\n" 
  exit 1
fi
if [ ! -f "$PASSWORD_FILE" ]; then
	printf "[${RED}${ICON_KO}${NOCOLOR}] Sorry, but ${GREEN}password file${NOCOLOR} doesn't exist.\n"
	exit 1
fi

BACKUP_FILENAME=$(basename $BACKUP_FILE)

printf "\n[${YELLOW}${ICON_WAIT}${NOCOLOR}] Attempting to decrypt file: ${YELLOW}${BACKUP_FILE}${NOCOLOR}\n"
	
if gpg -o "$DECRYPT_DESTINATION/$BACKUP_FILENAME" --yes --batch --passphrase-fd 3 -d "${BACKUP_FILE}" 3< $PASSWORD_FILE; then
  printf "[${GREEN}${ICON_ROCKET}${NOCOLOR}] Archive decrypted with success.\n"
  exit 0
else
  printf "[${RED}${ICON_KO}${NOCOLOR}] Attempt to decrypt backup file failed!\n"
  exit 1
fi
